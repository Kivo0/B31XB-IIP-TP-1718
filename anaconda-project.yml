# This is an Anaconda project file.
#
# Here you can describe your project and how to run it.
# Use `anaconda-project run` to run the project.
# The file is in YAML format, please see http://www.yaml.org/start.html for more.
#

#
# Set the 'name' key to name your project
#
name: PythonLab
#
# Set the 'icon' key to give your project an icon
#
icon:
#
# Set a one-sentence-or-so 'description' key with project details
#
description:
#
# In the commands section, list your runnable scripts, notebooks, and other code.
# Use `anaconda-project add-command` to add commands.
#
commands:
  0-0-intoduction-python/01_basic_types.ipynb:
    notebook: 0-0-intoduction-python/01_basic_types.ipynb
    env_spec: default
  0-0-intoduction-python/02_control_flow.ipynb:
    notebook: 0-0-intoduction-python/02_control_flow.ipynb
    env_spec: default
  0-0-intoduction-python/03_functions.ipynb:
    notebook: 0-0-intoduction-python/03_functions.ipynb
    env_spec: default
  0-0-intoduction-python/04_reusing_code.ipynb:
    notebook: 0-0-intoduction-python/04_reusing_code.ipynb
    env_spec: default
  0-0-intoduction-python/05_input_output.ipynb:
    notebook: 0-0-intoduction-python/05_input_output.ipynb
    env_spec: default
  0-0-intoduction-python/06_standard_library.ipynb:
    notebook: 0-0-intoduction-python/06_standard_library.ipynb
    env_spec: default
  0-0-intoduction-python/__solved__01_basic_types.ipynb:
    notebook: 0-0-intoduction-python/__solved__01_basic_types.ipynb
    env_spec: default
  0-0-intoduction-python/__solved__02_control_flow.ipynb:
    notebook: 0-0-intoduction-python/__solved__02_control_flow.ipynb
    env_spec: default
  0-0-intoduction-python/__solved__03_functions.ipynb:
    notebook: 0-0-intoduction-python/__solved__03_functions.ipynb
    env_spec: default
  0-0-intoduction-python/__solved__04_reusing_code.ipynb:
    notebook: 0-0-intoduction-python/__solved__04_reusing_code.ipynb
    env_spec: default
  0-0-intoduction-python/__solved__05_input_output.ipynb:
    notebook: 0-0-intoduction-python/__solved__05_input_output.ipynb
    env_spec: default
  0-0-intoduction-python/__solved__06_standard_library.ipynb:
    notebook: 0-0-intoduction-python/__solved__06_standard_library.ipynb
    env_spec: default
  0-0-intoduction-python/__solved__07_classes.ipynb:
    notebook: 0-0-intoduction-python/__solved__07_classes.ipynb
    env_spec: default
  1-introducion/1-introduction-skimage.ipynb:
    notebook: 1-introducion/1-introduction-skimage.ipynb
    env_spec: default
  1-introducion/__solved__1-introduction-skimage.ipynb:
    notebook: 1-introducion/__solved__1-introduction-skimage.ipynb
    env_spec: default
  2-image-enhancement/2-enhancement-supplementary.ipynb:
    notebook: 2-image-enhancement/2-enhancement-supplementary.ipynb
    env_spec: default
  2-image-enhancement/2-enhancement.ipynb:
    notebook: 2-image-enhancement/2-enhancement.ipynb
    env_spec: default
  2-image-enhancement/__solved__2-enhancement.ipynb:
    notebook: 2-image-enhancement/__solved__2-enhancement.ipynb
    env_spec: default
  3-interpolation-blending/3-interpolation-blending.ipynb:
    notebook: 3-interpolation-blending/3-interpolation-blending.ipynb
    env_spec: default
  3-interpolation-blending/__solved__3-interpolation-blending.ipynb:
    notebook: 3-interpolation-blending/__solved__3-interpolation-blending.ipynb
    env_spec: default
  4-filter-spatial-domain/4-spatial-filter.ipynb:
    notebook: 4-filter-spatial-domain/4-spatial-filter.ipynb
    env_spec: default
  5-morpho-segmentation/5-morpho-segmentation.ipynb:
    notebook: 5-morpho-segmentation/5-morpho-segmentation.ipynb
    env_spec: default
#
# In the variables section, list any environment variables your code depends on.
# Use `anaconda-project add-variable` to add variables.
#
variables: {}
#
# In the services section, list any services that should be
# available before your code runs.
# Use `anaconda-project add-service` to add services.
#
services: {}
#
# In the downloads section, list any URLs to download to local files
# before your code runs.
# Use `anaconda-project add-download` to add downloads.
#
downloads: {}
#
# In the packages section, list any packages that must be installed
# before your code runs.
# Use `anaconda-project add-packages` to add packages.
#
packages:
- anaconda
#
# In the channels section, list any Conda channel URLs to be searched
# for packages.
#
# For example,
#
# channels:
#    - mychannel
#
channels: []
#
# In the platforms section, list platforms the project should work on
# Examples: "linux-64", "osx-64", "win-64"
# Use `anaconda-project add-platforms` to add platforms.
#
platforms:
- linux-64
- osx-64
- win-64
#
# You can define multiple, named environment specs.
# Each inherits any global packages or channels,
# but can have its own unique ones also.
# Use `anaconda-project add-env-spec` to add environment specs.
#
env_specs:
  default:
    description: Default environment spec for running commands
    packages: []
    channels: []
    platforms: []
